init <- scale(matrix(runif(n*2),ncol=2),scale=FALSE)
nmmds.out <- isoMDS(manh_distances,y=init,k=2, maxit = 100)
Y <- nmmds.out$points
nmmds2.out <- isoMDS(manh_distances,k=2) # PCO solution as initial configuration
Y2 <- nmmds2.out$points
plot(Y[,2],Y[,1],pch=19, main = "Map of individuals - Non-MDS metrics computed with random initialization")
plot(Y2[,2],Y2[,1],pch=19, main = "Map of individuals - Non-MDS metrics computed with PCO initialization")
Dest <- as.matrix(dist(Y2))
Dest.vec <- Dest[lower.tri(Dest)]
plot(Dobs.vec,Dest.vec,xlab="Observed",ylab="Fitted")
res <- data.frame(Dobs.vec, Dest.vec)
reg <- lm(Dest.vec~Dobs.vec, data = res)
summary(reg)
for(i in 1:n)
{
print(i)
nmmds2.out[i] <- isoMDS(manh_distances,k=i, trace = FALSE)$stress # PCO solution as initial configuration
}
nmmds2.out
nmmds2.out <- unlist(nmmds2.out)
plot(1:length(nmmds2.out), nmmds2.out)
plot(1:length(nmmds2.out), nmmds2.out. main = "Stress versus dimensionality", xlab = "Dimansionality", ylab = "Test")
plot(1:length(nmmds2.out), nmmds2.out, main = "Stress versus dimensionality", xlab = "Dimansionality", ylab = "Test")
cor(Y2, X)
Y2
X
res <- cbind(Y2, X)
names(res)
head(res)
names(res) <- c("M MDS X1", "M MDS X2", "NM MDS X1", "NM MDS X2")
cor(res)
head(res)
colnames(res) <- c("M MDS X1", "M MDS X2", "NM MDS X1", "NM MDS X2")
cor(res)
plot(res)
plot(cor(res))
res
dim(res)
plot(res[,1], res[,2], res[,3])
?plot
knitr::opts_chunk$set(echo = FALSE)
library(data.table)
library(HardyWeinberg)
library(genetics)
library(LDheatmap)
rm(list = ls())
setwd("C:/Users/david/Documents/MIRI-Data Science/BSI - Bioinfirmatics ans statistical genomics/Part Two/Lab3 - Linkage desequilibrium")
source('aux_functions.R')
load("ABO-CHB.rda")
data <- Z
data_t <- as.data.table(data)
n_individuals <- dim(Z)[2]
na_count <- sum(apply(Z,2, function(x) sum(is.na(x))))
per_missing <- round(100*(na_count/(45*45)), 2)
snp_geno_count <- t(apply(data_t, 1, snp_geno_counts))
snp_geno_count <- data.frame(snp_geno_count)
names(snp_geno_count) <- c("AA", "AB", "BB")
HWTernaryPlot(snp_geno_count,region=1)
SNP1 <- data[1,]
SNP2 <- data[2,]
table(SNP1, SNP2)
SNP1p <- genotype(SNP1, sep="")
SNP2p <- genotype(SNP2, sep="")
res <- LD(SNP1p,SNP2p)
D <- res$D
a_f_SNP1 <- summary(SNP1p)$allele.freq[,2]
a_f_SNP2 <- summary(SNP2p)$allele.freq[,2]
names(a_f_SNP2) <- c("g", "a")
D_max <- min(a_f_SNP1[1]*a_f_SNP2[1], a_f_SNP1[2]*a_f_SNP2[2])
D_norm <- D/D_max
R_2 <- (D^2)/(a_f_SNP1[1]*a_f_SNP2[1]*a_f_SNP1[2]*a_f_SNP2[2])
Chi_squared <- R_2 * 2 * 45
r <- -D / sqrt(a_f_SNP1[1]*a_f_SNP2[1]*a_f_SNP1[2]*a_f_SNP2[2])
f_Gg <- a_f_SNP1[1] * a_f_SNP2[1] + D
f_Ga <- a_f_SNP1[1] * a_f_SNP2[2] - D
f_Ag <- a_f_SNP1[2] * a_f_SNP2[1] - D
f_Aa <- a_f_SNP1[2] * a_f_SNP2[2] + D
SNP <- 1:n_individuals;
pairs <- t(combn(SNP, 2))
ld_stats <- apply(pairs, 1, function(x) LD(genotype(data[x[1],], sep=""),genotype(data[x[2],], sep="")))
ld_stats_output <- lapply(ld_stats, function(x) c(x[2:7]))
ld_stats_output <- rbindlist(ld_stats_output)
ld_stats_output <- ld_stats_output[ , -c(3,5)]
str(ld_stats_output)
res <- data.frame(res)
knitr::opts_chunk$set(echo = FALSE)
library(data.table)
library(HardyWeinberg)
library(genetics)
library(LDheatmap)
library(haplo.stats)
rm(list = ls())
setwd("C:/Users/david/Documents/MIRI-Data Science/BSI - Bioinfirmatics ans statistical genomics/Part Two/Lab5 - Substructure")
source('aux_functions.R')
load("SNPChr20.rda")
Y[1:5, 1:5]
nmis <- function(x) {
y <- sum(is.na(x))
return(y)
}
missingpervariant <- apply(Y,2,nmis)
sum(missingpervariant==310)
manh_distances <- dist(Y, method = "manhattan")
manh_distances <- as.matrix(manh_distances)
manh_distances[1:5, 1:5]
n <- 310
mds.out <- cmdscale(manh_distances,k=n-1,eig=TRUE)
attributes(mds.out)
mds.out$GOF
?cmdscale
mds.out$eig
X <- mds.out$points[,1:2]
plot(X[,1],X[,2],asp=1,xlab="First principal axis",
ylab="Second principal axis")
mds.out$eig[1:10]
mds.out$GOF
mds.out <- cmdscale(manh_distances,k=2,eig=TRUE)
mds.out$GOF
Dest <- as.matrix(dist(X))
Dobs.vec <- manh_distances[lower.tri(manh_distances)]
Dest.vec <- Dest[lower.tri(Dest)]
plot(Dobs.vec,Dest.vec,xlab="Observed",ylab="Fitted")
res <- data.frame(Dobs.vec, Dest.vec)
reg <- lm(Dest.vec~Dobs.vec, data = res)
summary(reg)
init <- scale(matrix(runif(n*2),ncol=2),scale=FALSE)
nmmds.out <- isoMDS(manh_distances,y=init,k=2, maxit = 100)
Y <- nmmds.out$points
nmmds2.out <- isoMDS(manh_distances,k=2) # PCO solution as initial configuration
Y2 <- nmmds2.out$points
plot(Y[,2],Y[,1],pch=19, main = "Map of individuals - Non-MDS metrics computed with random initialization")
plot(Y2[,2],Y2[,1],pch=19, main = "Map of individuals - Non-MDS metrics computed with PCO initialization")
Dest <- as.matrix(dist(Y2))
Dest.vec <- Dest[lower.tri(Dest)]
plot(Dobs.vec,Dest.vec,xlab="Observed",ylab="Fitted")
res <- data.frame(Dobs.vec, Dest.vec)
reg <- lm(Dest.vec~Dobs.vec, data = res)
summary(reg)
for(i in 1:100)
{
print(i)
nmmds2.out[i] <- isoMDS(manh_distances,k=i, trace = FALSE)$stress # PCO solution as initial configuration
}
nmmds2.out <- unlist(nmmds2.out)
plot(1:length(nmmds2.out), nmmds2.out, main = "Stress versus dimensionality", xlab = "Dimansionality", ylab = "Test")
res <- cbind(Y2, X)
colnames(res) <- c("M MDS X1", "M MDS X2", "NM MDS X1", "NM MDS X2")
cor(res)
res <- data.frame(res)
plot(res)
head(res)
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
########################## Step 00: Clear and Set Up Enviroment #########################################
rm(list = ls())
gc()
registerDoMC(cores = 4)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("aux_functions.R")
source("images_classification_function.R")
load_packages() # this call will load (and install if needed) all libraries needed to our project
### in image_classification.R ###
cluster <- makeCluster(3)
registerDoParallel(cluster)
### Default parameters ###
dataset_path = "../Images Datasets/Carltech"
n_splits <- 5
n_bins <- 20
cost <- 10
num_categories <- 10
num_images_x_category <- 70
file.remove(file.path("../Experiments_results/kernel_type", list.files("../Experiments_results/kernel_type")))
set.seed(12457)
source("images_classification_experiment_4.R")
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
set.seed(12457)
source("images_classification_experiment_4.R")
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
file.remove(file.path("../Experiments_results/num_images", list.files("../Experiments_results/num_images")))
set.seed(12457)
source("images_classification_experiment_6.R")
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
images_classification_experiment_6.R")
)
;
()
)
)
""
source("images_classification_experiment_6.R")
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source("images_classification_experiment_6.R")
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source("images_classification_experiment_6.R")
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source("images_classification_experiment_6.R")
image_path
image <- readImage(image_path)
return(image)
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source("images_classification_experiment_6.R")
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source("images_classification_experiment_6.R")
set.seed(1245)
source("images_classification_experiment_6.R")
file.remove(file.path("../Experiments_results/num_images", list.files("../Experiments_results/num_images")))
set.seed(12457)
source("images_classification_experiment_6.R")
set.seed(1245)
source("images_classification_experiment_6.R")
set.seed(22457)
source("images_classification_experiment_6.R")
n_splits <- 3
n_bins <- 7
n_splits <- 3
n_bins <- 7
file.remove(file.path("../Experiments_results/num_images", list.files("../Experiments_results/num_images")))
set.seed(12457)
source("images_classification_experiment_6.R")
set.seed(1245)
source("images_classification_experiment_6.R")
set.seed(22457)
source("images_classification_experiment_6.R")
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
file.remove(file.path("../Experiments_results/kernel_type", list.files("../Experiments_results/kernel_type")))
set.seed(12457)
source("images_classification_experiment_4.R")
images_xcat
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
n_images <- 30
file.remove(file.path("../Experiments_results/kernel_type", list.files("../Experiments_results/kernel_type")))
set.seed(12457)
source("images_classification_experiment_4.R")
n_images
n_images
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
file.remove(file.path("../Experiments_results/kernel_type", list.files("../Experiments_results/kernel_type")))
set.seed(12457)
source("images_classification_experiment_4.R")
n_splits <- 3
n_bins <- 5
cost <- 10
num_categories <- 10
n_images <- 15
file.remove(file.path("../Experiments_results/kernel_type", list.files("../Experiments_results/kernel_type")))
set.seed(12457)
source("images_classification_experiment_4.R")
set.seed(1245)
source("images_classification_experiment_4.R")
set.seed(22457)
source("images_classification_experiment_4.R")
file.remove(file.path("../Experiments_results/num_categories", list.files("../Experiments_results/num_categories")))
set.seed(12457)
source("images_classification_experiment_3.R")
set.seed(1245)
source("images_classification_experiment_3.R")
set.seed(22457)
source("images_classification_experiment_3.R")
file.remove(file.path("../Experiments_results/num_categories", list.files("../Experiments_results/num_categories")))
set.seed(12457)
source("images_classification_experiment_3.R")
set.seed(1245)
source("images_classification_experiment_3.R")
n_splits <- 3
n_bins <- 5
cost <- 10
num_categories <- 16
n_images <- 15
dataset_path = "../Images Datasets/Carltech"
n_splits <- 3
n_bins <- 7
cost <- 10
num_categories <- 16
n_images <- 15
file.remove(file.path("../Experiments_results/num_categories", list.files("../Experiments_results/num_categories")))
set.seed(12457)
source("images_classification_experiment_3.R")
set.seed(1245)
source("images_classification_experiment_3.R")
set.seed(22457)
source("images_classification_experiment_3.R")
results <- data.frame(number_classes = seq(2,num_categories, by=2), tr.error = round(results*100,2))
##### Write results to output file
file_path_output <- paste(results_path,"Number_of_parameters_accuracy_results_binary_classification.txt", sep="")
categories <- paste0(selected_categories[1:2], collapse = "_")
line1 <- paste("Selected_categories: ", categories, "; \n",sep = "")
cat(line1, file = file_path_output, sep = " ", fill = FALSE, labels = NULL, append = TRUE)
write.table(results, file = file_path_output, sep = " ", append = TRUE, row.names = FALSE, col.names = TRUE, quote = FALSE)
cat("; \n", file = file_path_output, append = TRUE)
plot_title <- paste(results_path, "Number_categories_vs_accuracy",categories,".jpeg", sep = "")
jpeg(plot_title)
# 2. Create a plot
p <- plot(results, type = "l")
print(p)
#Close the pdf file
dev.off()
# print(p)
file.remove(file.path("../Experiments_results/num_categories", list.files("../Experiments_results/num_categories")))
set.seed(12457)
source("images_classification_experiment_3.R")
set.seed(1245)
source("images_classification_experiment_3.R")
set.seed(22457)
source("images_classification_experiment_3.R")
file.remove(file.path("../Experiments_results/kernel_type", list.files("../Experiments_results/kernel_type")))
set.seed(12457)
source("images_classification_experiment_4.R")
set.seed(1245)
source("images_classification_experiment_4.R")
set.seed(22457)
source("images_classification_experiment_4.R")
results <- data.frame(kernels = kernel_list, tr.error = round(results*100,2))
results <- data.frame(kernels = kernel_list, tr.error = round(results*100,2))
results <- sapply(kernel_list, function(x, selected_categories) experiment_4_kernels(x, selected_categories) , selected_categories = selected_categories)
results <- data.frame(kernels = kernel_list, tr.error = round(results*100,2))
file_path_output <- paste(results_path,"Kernel_choice_accuracy_results_binary_classification.txt", sep="")
categories <- paste0(selected_categories[1:2], collapse = "_")
line1 <- paste("Categories: ", paste0(selected_categories, collapse = "_"), "; \n",sep = "")
cat(line1, file = file_path_output, sep = " ", fill = FALSE, labels = NULL, append = TRUE)
write.table(results, file = file_path_output, sep = " ", append = TRUE, row.names = FALSE, col.names = TRUE, quote = FALSE)
cat("; \n", file = file_path_output, append = TRUE)
plot_title <- paste(results_path, "Accuracy_for_categories_", categories, ".jpeg", sep = "")
jpeg(plot_title)
# 2. Create a plot
p <- barplot(results$tr.error, names.arg = results$kernels)
print(p)
#Close the pdf file
dev.off()
file.remove(file.path("../Experiments_results/kernel_type", list.files("../Experiments_results/kernel_type")))
set.seed(12457)
source("images_classification_experiment_4.R")
set.seed(1245)
source("images_classification_experiment_4.R")
set.seed(22457)
source("images_classification_experiment_4.R")
file.remove(file.path("../Experiments_results/methods_benchmark", list.files("../Experiments_results/methods_benchmark")))
set.seed(12457)
source("images_classification_experiment_5.R")
set.seed(1245)
source("images_classification_experiment_5.R")
set.seed(22457)
source("images_classification_experiment_5.R")
file.remove(file.path("../Experiments_results/methods_benchmark", list.files("../Experiments_results/methods_benchmark")))
set.seed(12457)
source("images_classification_experiment_5.R")
set.seed(1245)
source("images_classification_experiment_5.R")
set.seed(22457)
source("images_classification_experiment_5.R")
n_splits <- 3
n_bins <- 10
cost <- 10
num_categories <- 16
n_images <- 30
n_splits <- 4
n_bins <- 10
cost <- 10
file.remove(file.path("../Experiments_results/methods_benchmark", list.files("../Experiments_results/methods_benchmark")))
set.seed(12457)
source("images_classification_experiment_5.R")
set.seed(1245)
source("images_classification_experiment_5.R")
set.seed(22457)
source("images_classification_experiment_5.R")
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
file.remove(file.path("../Experiments_results/methods_benchmark", list.files("../Experiments_results/methods_benchmark")))
set.seed(12457)
source("images_classification_experiment_5.R")
set.seed(1245)
source("images_classification_experiment_5.R")
set.seed(22457)
source("images_classification_experiment_5.R")
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
n_splits <- 4
n_bins <- 15
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source("images_classification_experiment_4.R")
svmGrid
tuneGrid
svmGrid
svmGrid
source("images_classification_experiment_4.R")
svmGrid
svmGrid
names(svmGrid) <- c("c", "sigma")
svmGrid
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
file.remove(file.path("../Experiments_results/methods_benchmark", list.files("../Experiments_results/methods_benchmark")))
set.seed(12457)
file.remove(file.path("../Experiments_results/kernel_type", list.files("../Experiments_results/kernel_type")))
set.seed(12457)
source("images_classification_experiment_4.R")
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
file.remove(file.path("../Experiments_results/kernel_type", list.files("../Experiments_results/kernel_type")))
set.seed(12457)
source("images_classification_experiment_4.R")
set.seed(12457)
source("images_classification_experiment_4.R")
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
set.seed(12457)
source("images_classification_experiment_4.R")
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source("images_classification_experiment_4.R")
n_splits <- 5
n_bins <- 15
cost <- 10
num_categories <- 16
n_images <- 15
file.remove(file.path("../Experiments_results/kernel_type", list.files("../Experiments_results/kernel_type")))
set.seed(12457)
source("images_classification_experiment_4.R")
set.seed(1245)
source("images_classification_experiment_4.R")
set.seed(22457)
source("images_classification_experiment_4.R")
cost <- 100
n_splits <- 5
n_bins <- 15
cost <- 100
num_categories <- 16
n_images <- 30
file.remove(file.path("../Experiments_results/kernel_type", list.files("../Experiments_results/kernel_type")))
set.seed(12457)
source("images_classification_experiment_4.R")
set.seed(1245)
source("images_classification_experiment_4.R")
set.seed(22457)
source("images_classification_experiment_4.R")
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
########################## Step 00: Clear and Set Up Enviroment #########################################
rm(list = ls())
gc()
registerDoMC(cores = 4)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("aux_functions.R")
source("images_classification_function.R")
load_packages() # this call will load (and install if needed) all libraries needed to our project
### in image_classification.R ###
cluster <- makeCluster(3)
registerDoParallel(cluster)
### Default parameters ###
dataset_path = "../Images Datasets/Carltech"
n_splits <- 5
n_bins <- 15
cost <- 100
num_categories <- 16
n_images <- 30
source('~/MIRI-Data Science/KLMM - Kernel methods and multivariate analysis/Image classification/kmlmm/R code/images_classification_function.R')
file.remove(file.path("../Experiments_results/hog_parameters", list.files("../Experiments_results/hog_parameters")))
set.seed(12457)
source("images_classification_experiment_1.R")
categories <- paste0(selected_categories[1:2], collapse = "_")
line1 <- paste("Categories: ", paste0(selected_categories, collapse = "_"), "; \n",sep = "")
cat(line1, file = file_path_output, sep = " ", fill = FALSE, labels = NULL, append = TRUE)
write.table(comb, file = file_path_output, sep = " ", append = TRUE, row.names = FALSE, col.names = TRUE, quote = FALSE)
cat("; \n", file = file_path_output, append = TRUE)
plot_title <- paste(results_path, "Accuracy_for_categories_ ", categories, ".jpeg", sep = "")
jpeg(plot_title)
# 2. Create a plot
p <- ggplot(data = comb, aes(x=n_splits, y=n_bins, fill=tr.CV.accuracy)) + geom_tile()
print(p)
#Close the pdf file
dev.off()
seq(6, 24, by=4)
seq(3, 13, by=2)
#HOG Hyperparameters
n_splits <- seq(3, 13, by=3)
n_bins <- seq(6, 22, by=4)
#HOG Hyperparameters
n_splits <- seq(3, 13, by=3)
n_splits
file.remove(file.path("../Experiments_results/hog_parameters", list.files("../Experiments_results/hog_parameters")))
set.seed(12457)
source("images_classification_experiment_1.R")
set.seed(1245)
source("images_classification_experiment_1.R")
set.seed(22457)
source("images_classification_experiment_1.R")
file.remove(file.path("../Experiments_results/hog_parameters", list.files("../Experiments_results/hog_parameters")))
set.seed(12457)
source("images_classification_experiment_1.R")
set.seed(1245)
source("images_classification_experiment_1.R")
set.seed(22457)
source("images_classification_experiment_1.R")
